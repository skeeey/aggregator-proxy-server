apiVersion: v1
kind: Namespace
metadata:
  name: multicloud-system

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: hub-sa
  namespace: multicloud-system

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aggregator-proxy-server
  labels:
    app: aggregator-proxy-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: hub-sa
    namespace: multicloud-system

# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: aggregator-proxy-server
#   namespace: kube-system
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: extension-apiserver-authentication-reader
# subjects:
# - kind: ServiceAccount
#   name: hub-sa
#   namespace: multicloud-system

---

kind: Service
apiVersion: v1
metadata:
  name: aggregator-proxy-server
  namespace: multicloud-system
spec:
  selector:
    app: aggregator-proxy-server
  ports:
  - name: secure
    protocol: TCP
    port: 443
    targetPort: 4443

---

apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.aggregation.open-cluster-management.io
spec:
  group: aggregation.open-cluster-management.io
  version: v1
  service:
    namespace: multicloud-system
    name: aggregator-proxy-server
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 10000
  versionPriority: 20

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: aggregator-proxy-server
  namespace: multicloud-system
  labels:
    app: aggregator-proxy-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aggregator-proxy-server
  template:
    metadata:
      labels:
        app: aggregator-proxy-server
    spec:
      serviceAccountName: hub-sa
      containers:
      - name: aggregator-proxy-server
        image: aggregator-proxy-server:0.0.1
        imagePullPolicy: IfNotPresent
        args:
          - "/aggregator-proxy-server"
          - --cert-dir=/tmp
          - --secure-port=4443
